name: Build & Publish Plugin

on:
  push:
    branches: [ 'main' ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      checks: write
      pull-requests: write
      packages: write
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.COMMIT_KEY }}"
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: gradle/actions/setup-gradle@v4
      - name: Pre-merge checks
        run: ./gradlew preMerge --continue
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml
      - name: Upload HTML Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results
          path: |
            **/build/reports/tests
          retention-days: 7
      - name: Publish Ktlint reports
        uses: lcollins/checkstyle-github-action@v2
        if: always()
        with:
          path: "**/build/reports/ktlint/**/*Check.xml"
      # Use Github Packages for snapshots (Gradle Plugin portal doesn't accept them)
      - name: Publish to Github Packages
        shell: bash
        env:
          GRADLE_PUBLISH_KEY: ${{ env.GITHUB_ACTOR }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ !startsWith(github.ref, 'refs/tags/v') }}" == "true" ]]; then
            ./gradlew setupPluginUploadFromEnvironment publishAllPublicationsToGitHubPackagesRepository -Prelease.forceSnapshot
          else
            ./gradlew setupPluginUploadFromEnvironment publishAllPublicationsToGitHubPackagesRepository
          fi
      - name: Publish to Gradle Plugin portal
        if: 'false' # skip always for now - startsWith(github.ref, 'refs/tags/v')
        shell: bash
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: ./gradlew setupPluginUploadFromEnvironment publishPlugins
      - name: Get Version
        id: version
        shell: bash
        run: echo "version=$(./gradlew --console plain --quiet :currentVersion -Prelease.quiet)" >> $GITHUB_OUTPUT
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: scala-kotlin-extension-codegen
          path: "**/build/libs/scala-kotlin-extension-codegen-*.jar"
          retention-days: 7
          if-no-files-found: error
      - name: Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db:1
        with:
          scan-type: 'rootfs'
          scan-ref: plugin-build/scala-kotlin-extension-codegen-gradle/build/libs/
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
      - name: Create Github Release
        uses: docker://antonyurchenko/git-release:v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ steps.version.outputs.version }}
          PRE_RELEASE: ${{ github.ref_type == 'branch' }}
          UNRELEASED: ${{ github.ref_type == 'branch' && 'update' || '' }}
          UNRELEASED_TAG: latest-snapshot
          DRAFT_RELEASE: false
          ALLOW_EMPTY_CHANGELOG: ${{ github.ref_type == 'branch' && 'true' || 'false' }}
        with:
          args: |
            plugin-build/scala-kotlin-extension-codegen-gradle/build/libs/*.jar
            codegen/build/libs/*.jar
